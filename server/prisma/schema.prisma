// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Book {
  id            Int        @id @default(autoincrement())
  title         String
  author        Author     @relation(fields: [authorId], references: [id])
  authorId      Int
  publishedYear Int?
  description   String?
  categories    Category[] // Связь многие-ко-многим
  createdAt     DateTime   @default(now())
  updatedAt     DateTime   @updatedAt
  reviews       Review[]
  favorites     Favorite[] // Связь с избранным
}

model Author {
  id      Int    @id @default(autoincrement())
  name    String
  bio     String?
  books   Book[]
}

model Category {
  id          Int      @id @default(autoincrement())
  name        String   @unique
  description String?
  books       Book[]   // Связь многие-ко-многим с Book
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model User {
  id           Int        @id @default(autoincrement())
  username     String     @unique
  email        String     @unique
  passwordHash String
  avatarUrl    String?
  createdAt    DateTime   @default(now())
  updatedAt    DateTime   @updatedAt
  reviews      Review[]
  favorites    Favorite[] // Связь с избранным
}

model Review {
  id        Int      @id @default(autoincrement())
  book      Book     @relation(fields: [bookId], references: [id])
  bookId    Int
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
  rating    Int
  comment   String?
  createdAt DateTime @default(now())

  @@unique([userId, bookId])
}

model Favorite {
  id        Int      @id @default(autoincrement())
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
  book      Book     @relation(fields: [bookId], references: [id])
  bookId    Int
  createdAt DateTime @default(now())

  @@unique([userId, bookId])
}